<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
    
 <mapper namespace="com.notice.repository.mapper.NoticeMapper">
 
 	<resultMap id="noticeMap" type="com.notice.dto.NoticeDetailResponse">
 		<id property="noticeId" column="notice_id"/>
 		<result property="title" column="title" />
 		<result property="content" column="content" />
 		<result property="createdAt" column="created_at" />
 		<result property="updatedAt" column="updated_at" />
 		<result property="memberId" column="member_id" />
 		<collection column="notice_id" property="attachFiles" javaType="list" ofType="AttachFile" select="attachFileList" >

 		</collection>
 	</resultMap>
 	
 	<select id="attachFileList" resultType="AttachFile">
 		select 
 			* 
 		FROM 
 			attach_file 
 		WHERE 
 			notice_id = #{noticeId}
 	</select>
 	
 	<select id="detailNotice" resultMap="noticeMap" >
 		SELECT 
 			notice_id, 
 			title, 
 			content, 
 			date_format(created_at, '%Y-%m-%d %H:%i:%s') as created_at, 
 			date_format(updated_at, '%Y-%m-%d %H:%i:%s') as updated_at, 
 			member_id
 		FROM 
 			notice 
 		WHERE 
 			notice_id = #{noticeId}
 	</select>
 
 
 	<insert id="save">
 		call save_notice_pro(
 			#{title}, 
 			#{content}, 
 			#{memberId}
 		)
 		
 		<!-- INSERT 
 		INTO 
 			notice (
 				title, 
 				content, 
 				created_at, 
 				updated_at, 
 				member_id
 			) 
 		VALUES (
 			#{title}, 
 			#{content}, 
 			now(), 
 			now(), 
 			#{memberId}
 		) --> 
 		<selectKey keyProperty="noticeId" order="AFTER" resultType="Long">
 			SELECT 
 				LAST_INSERT_ID()
 		</selectKey>
 	</insert>
 	
 	<select id="findById" resultType="Notice">
 		SELECT 
 			n.notice_id, 
 			n.title, 
 			n.content, 
 			n.created_at, 
 			n.updated_at, 
 			n.member_id
 		FROM 
 			notice n 
 		WHERE 
 			n.notice_id = #{id}
 	</select>
 	
 	<sql id="search">
 		<where>
 			<choose>
	 			<when test="type != null and type != '' and type == 'total'">
	 				title Like concat('%', #{word}, '%')
	 				OR content Like concat('%', #{word}, '%')
	 			</when>
	 			<when test="type != null and type != '' and word != null">
	 				${type} Like concat('%', #{word}, '%')
	 			</when>
 			</choose>
 			
 		</where>
 	</sql>
 	
 	<select id="findAll" resultType="com.notice.dto.NoticeResponse">
 		SELECT 
 			n.notice_id, 
 			n.title, 
 			n.content, 
 			date_format(n.created_at, '%Y-%m-%d') as created_at, 
 			date_format(n.updated_at, '%Y-%m-%d') as updated_at, 
 			n.member_id
 		FROM 
 			notice n
 		<include refid="search" />
	 		ORDER BY n.notice_id DESC
	 		LIMIT 5 OFFSET #{offset}
 	</select>
 	
 	<select id="countQuery" resultType="int">
 		SELECT 
 			count(notice_id)
 		FROM 
 			notice n
 		<include refid="search" />
 	</select>
 	
 	<update id="update">
 		UPDATE 
 			notice
 		<set>
 			<if test="title != null and title != ''">
 				title = #{title},
 			</if>
 			<if test="content != null and content != ''">
 				content = #{content},
 			</if>
 				updated_at = now()
 		</set>
 		where 
 			notice_id = #{noticeId};
 	</update>
 	
 	<delete id="remove">
 		DELETE 
 		FROM 
 			notice n 
 		WHERE 
 			n.notice_id = #{noticeId}
 	</delete>
 	
 	<delete id="removeAll">
 		call removeAll_by_notice_id(#{noiceId})
 	</delete>
 </mapper>